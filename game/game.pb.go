// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game.proto

package game

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GameRequestParams struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameRequestParams) Reset()         { *m = GameRequestParams{} }
func (m *GameRequestParams) String() string { return proto.CompactTextString(m) }
func (*GameRequestParams) ProtoMessage()    {}
func (*GameRequestParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{0}
}

func (m *GameRequestParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRequestParams.Unmarshal(m, b)
}
func (m *GameRequestParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRequestParams.Marshal(b, m, deterministic)
}
func (m *GameRequestParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRequestParams.Merge(m, src)
}
func (m *GameRequestParams) XXX_Size() int {
	return xxx_messageInfo_GameRequestParams.Size(m)
}
func (m *GameRequestParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRequestParams.DiscardUnknown(m)
}

var xxx_messageInfo_GameRequestParams proto.InternalMessageInfo

func (m *GameRequestParams) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GameData struct {
	GameId               string   `protobuf:"bytes,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	Symbol               string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	GameState            []string `protobuf:"bytes,3,rep,name=gameState,proto3" json:"gameState,omitempty"`
	Turn                 string   `protobuf:"bytes,4,opt,name=turn,proto3" json:"turn,omitempty"`
	Result               string   `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	Players              []string `protobuf:"bytes,6,rep,name=players,proto3" json:"players,omitempty"`
	Winner               string   `protobuf:"bytes,7,opt,name=winner,proto3" json:"winner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameData) Reset()         { *m = GameData{} }
func (m *GameData) String() string { return proto.CompactTextString(m) }
func (*GameData) ProtoMessage()    {}
func (*GameData) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{1}
}

func (m *GameData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameData.Unmarshal(m, b)
}
func (m *GameData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameData.Marshal(b, m, deterministic)
}
func (m *GameData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameData.Merge(m, src)
}
func (m *GameData) XXX_Size() int {
	return xxx_messageInfo_GameData.Size(m)
}
func (m *GameData) XXX_DiscardUnknown() {
	xxx_messageInfo_GameData.DiscardUnknown(m)
}

var xxx_messageInfo_GameData proto.InternalMessageInfo

func (m *GameData) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *GameData) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *GameData) GetGameState() []string {
	if m != nil {
		return m.GameState
	}
	return nil
}

func (m *GameData) GetTurn() string {
	if m != nil {
		return m.Turn
	}
	return ""
}

func (m *GameData) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *GameData) GetPlayers() []string {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *GameData) GetWinner() string {
	if m != nil {
		return m.Winner
	}
	return ""
}

func init() {
	proto.RegisterType((*GameRequestParams)(nil), "game.gameRequestParams")
	proto.RegisterType((*GameData)(nil), "game.gameData")
}

func init() { proto.RegisterFile("game.proto", fileDescriptor_38fc58335341d769) }

var fileDescriptor_38fc58335341d769 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4a, 0x03, 0x41,
	0x0c, 0xc6, 0x1d, 0xbb, 0x6e, 0xdd, 0x08, 0xfe, 0x99, 0x83, 0x0e, 0xe2, 0xa1, 0xec, 0x69, 0x41,
	0x28, 0xa2, 0x07, 0x4f, 0xde, 0x84, 0xe2, 0x4d, 0xd6, 0x27, 0x98, 0xda, 0x20, 0x85, 0xfd, 0x67,
	0x26, 0xa3, 0xf4, 0x01, 0x7c, 0x25, 0x9f, 0x4f, 0x32, 0x51, 0x17, 0xda, 0xd3, 0xe6, 0x97, 0xfd,
	0xbe, 0x4c, 0xf2, 0x01, 0xbc, 0xf9, 0x16, 0xe7, 0x03, 0xf5, 0xdc, 0xdb, 0x4c, 0xea, 0xf2, 0x1a,
	0xce, 0xe4, 0x5b, 0xe3, 0x7b, 0xc4, 0xc0, 0xcf, 0x9e, 0x7c, 0x1b, 0xec, 0x39, 0xe4, 0x31, 0x20,
	0x3d, 0xad, 0x9c, 0x99, 0x99, 0xaa, 0xa8, 0x7f, 0xa9, 0xfc, 0x36, 0x70, 0x28, 0xea, 0x47, 0xcf,
	0x5e, 0x44, 0x52, 0x8f, 0x22, 0x25, 0xe9, 0x87, 0x4d, 0xbb, 0xec, 0x1b, 0xb7, 0xaf, 0x7d, 0x25,
	0x7b, 0x05, 0x85, 0x28, 0x5e, 0xd8, 0x33, 0xba, 0xc9, 0x6c, 0x52, 0x15, 0xf5, 0xd8, 0xb0, 0x16,
	0x32, 0x8e, 0xd4, 0xb9, 0x2c, 0x79, 0x52, 0x2d, 0x93, 0x08, 0x43, 0x6c, 0xd8, 0x1d, 0xe8, 0x24,
	0x25, 0xeb, 0x60, 0x3a, 0x34, 0x7e, 0x83, 0x14, 0x5c, 0x9e, 0xe6, 0xfc, 0xa1, 0x38, 0x3e, 0xd7,
	0x5d, 0x87, 0xe4, 0xa6, 0xea, 0x50, 0xba, 0xfd, 0x32, 0x70, 0x94, 0xde, 0x42, 0xfa, 0x58, 0xbf,
	0xa2, 0x7d, 0x80, 0x53, 0xd2, 0x8b, 0x17, 0xba, 0x01, 0xb1, 0xbd, 0x98, 0xa7, 0x70, 0x76, 0xd2,
	0xb8, 0x3c, 0x1e, 0x7f, 0xc8, 0xe1, 0xe5, 0x9e, 0xbd, 0x87, 0x93, 0x38, 0xac, 0x3c, 0xe3, 0xe2,
	0x7f, 0xff, 0x2d, 0xd1, 0xae, 0xa9, 0x32, 0x37, 0x66, 0x99, 0xa7, 0xe8, 0xef, 0x7e, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x1d, 0x94, 0x0c, 0xce, 0x88, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameServiceClient is the client API for GameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameServiceClient interface {
	RequestGameStart(ctx context.Context, in *GameRequestParams, opts ...grpc.CallOption) (*GameData, error)
	UpdateGameState(ctx context.Context, opts ...grpc.CallOption) (GameService_UpdateGameStateClient, error)
}

type gameServiceClient struct {
	cc *grpc.ClientConn
}

func NewGameServiceClient(cc *grpc.ClientConn) GameServiceClient {
	return &gameServiceClient{cc}
}

func (c *gameServiceClient) RequestGameStart(ctx context.Context, in *GameRequestParams, opts ...grpc.CallOption) (*GameData, error) {
	out := new(GameData)
	err := c.cc.Invoke(ctx, "/game.gameService/requestGameStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServiceClient) UpdateGameState(ctx context.Context, opts ...grpc.CallOption) (GameService_UpdateGameStateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GameService_serviceDesc.Streams[0], "/game.gameService/updateGameState", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameServiceUpdateGameStateClient{stream}
	return x, nil
}

type GameService_UpdateGameStateClient interface {
	Send(*GameData) error
	Recv() (*GameData, error)
	grpc.ClientStream
}

type gameServiceUpdateGameStateClient struct {
	grpc.ClientStream
}

func (x *gameServiceUpdateGameStateClient) Send(m *GameData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameServiceUpdateGameStateClient) Recv() (*GameData, error) {
	m := new(GameData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GameServiceServer is the server API for GameService service.
type GameServiceServer interface {
	RequestGameStart(context.Context, *GameRequestParams) (*GameData, error)
	UpdateGameState(GameService_UpdateGameStateServer) error
}

func RegisterGameServiceServer(s *grpc.Server, srv GameServiceServer) {
	s.RegisterService(&_GameService_serviceDesc, srv)
}

func _GameService_RequestGameStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameRequestParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServiceServer).RequestGameStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/game.gameService/RequestGameStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServiceServer).RequestGameStart(ctx, req.(*GameRequestParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameService_UpdateGameState_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameServiceServer).UpdateGameState(&gameServiceUpdateGameStateServer{stream})
}

type GameService_UpdateGameStateServer interface {
	Send(*GameData) error
	Recv() (*GameData, error)
	grpc.ServerStream
}

type gameServiceUpdateGameStateServer struct {
	grpc.ServerStream
}

func (x *gameServiceUpdateGameStateServer) Send(m *GameData) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameServiceUpdateGameStateServer) Recv() (*GameData, error) {
	m := new(GameData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "game.gameService",
	HandlerType: (*GameServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "requestGameStart",
			Handler:    _GameService_RequestGameStart_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "updateGameState",
			Handler:       _GameService_UpdateGameState_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "game.proto",
}
